server:
  port: 8085

spring:
  datasource:
    platform: postgres
    url: ${DATABASE_URL:jdbc:postgresql://localhost:5432/backempresa} 
    username: postgres
    password: postgres
    hikari:
      connectionTimeout: 20000
      maximumPoolSize: 5
  jpa:
    hibernate:
      ddl-auto: create

  kafka:
    producer:
      bootstrap-servers: ${KAFKA_PRODUCER_URL:http://localhost:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: ${KAFKA_CONSUMER_URL:http://localhost:9092}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
          

    topic:
      name: reservas_topic

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_DEFAULT_ZONE_URL:http://localhost:9292/eureka/}

feign:
    circuitbreaker:
        enabled: true
